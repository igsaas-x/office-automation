name: Deploy to Ubuntu Server

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      REMOTE_APP_DIR: ${{ secrets.REMOTE_APP_DIR }}
      DEPLOY_BRANCH: main
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      SERVICE_USER: root
      SERVICE_GROUP: root

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT || '22' }}
          envs: REMOTE_APP_DIR,DEPLOY_BRANCH,BOT_TOKEN,DB_HOST,DB_PORT,DB_USER,DB_PASSWORD,DB_NAME,SERVICE_USER,SERVICE_GROUP
          script: |
            set -euo pipefail
            cd "$REMOTE_APP_DIR"
            git fetch origin "$DEPLOY_BRANCH"
            git checkout "$DEPLOY_BRANCH"
            git pull --ff-only origin "$DEPLOY_BRANCH"
            {
              echo "BOT_TOKEN=${BOT_TOKEN}"
              echo "DB_HOST=${DB_HOST}"
              echo "DB_PORT=${DB_PORT}"
              echo "DB_USER=${DB_USER}"
              echo "DB_PASSWORD=${DB_PASSWORD}"
              echo "DB_NAME=${DB_NAME}"
            } > .env
            chmod 600 .env
            : "${SERVICE_USER:?SERVICE_USER secret not set}"
            SERVICE_GROUP_FALLBACK=${SERVICE_GROUP:-$SERVICE_USER}
            if [ ! -d .venv ]; then
              python3 -m venv .venv
            fi
            . .venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
            alembic upgrade head
            sed -e "s|/root/office-automation|${REMOTE_APP_DIR}|g" -e 's/^[[:space:]]*//' deploy/office-automation.service | sudo tee /etc/systemd/system/office-automation.service > /dev/null
            sudo systemctl daemon-reload
            sudo systemctl enable office-automation.service
            sudo systemctl restart office-automation.service
