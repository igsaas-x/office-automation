name: Deploy to Ubuntu Server

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT || '22' }}
          script: |
            cd ${{ secrets.REMOTE_APP_DIR }}
            git restore .env
            git switch main
            git pull origin main

            # Create virtual environment if it doesn't exist
            if [ ! -d "${{ secrets.REMOTE_APP_DIR }}/.venv" ]; then
              echo "Creating virtual environment..."
              python3 -m venv ${{ secrets.REMOTE_APP_DIR }}/.venv
            fi

            echo "Activating virtual environment..."
            source ${{ secrets.REMOTE_APP_DIR }}/.venv/bin/activate

            # Ensure pip is up to date
            python3 -m pip install --upgrade pip

            # Create .env file with secrets from GitHub
            cat > .env << EOF
            # Bot Tokens
            CHECKIN_BOT_TOKEN=${{ secrets.CHECKIN_BOT_TOKEN }}
            BALANCE_BOT_TOKEN=${{ secrets.BALANCE_BOT_TOKEN }}
            BOT_TOKEN=${{ secrets.CHECKIN_BOT_TOKEN }}

            # Database Configuration
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_NAME=${{ secrets.DB_NAME }}

            # Google Sheets Configuration
            BALANCE_SHEET_ID=${{ secrets.BALANCE_SHEET_ID }}
            EOF

            # Create Google Sheets credentials file
            echo "Creating Google Sheets credentials file..."
            cat > credentials.json << 'CREDENTIALS_EOF'
            ${{ secrets.GOOGLE_SHEETS_CREDENTIALS }}
            CREDENTIALS_EOF

            # Verify the file was created
            if [ -f "credentials.json" ] && [ -s "credentials.json" ]; then
              echo "✓ credentials.json created successfully"
              ls -lh credentials.json
            else
              echo "⚠ ERROR: Failed to create credentials.json"
              echo "Please ensure GOOGLE_SHEETS_CREDENTIALS secret is set in GitHub"
              exit 1
            fi

            pip install -r requirements.txt
            alembic upgrade head

            # Deploy service file
            sudo cp deploy/office-automation.service /etc/systemd/system/
            sudo systemctl daemon-reload

            # Stop any existing service
            sudo systemctl stop office-automation || true

            # Start service
            sudo systemctl start office-automation
            sudo systemctl enable office-automation

            echo "=== Service Status ==="
            sudo systemctl status office-automation --no-pager
            echo ""
            echo "=== DEPLOYMENT COMPLETED SUCCESSFULLY: $(date) ==="
