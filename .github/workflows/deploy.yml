name: Deploy to Ubuntu Server

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT || '22' }}
          script: |
            cd ${{ secrets.REMOTE_APP_DIR }}
            git restore .env
            git switch main
            git pull origin main

            # Create virtual environment if it doesn't exist
            if [ ! -d "${{ secrets.REMOTE_APP_DIR }}/.venv" ]; then
              echo "Creating virtual environment..."
              python3 -m venv ${{ secrets.REMOTE_APP_DIR }}/.venv
            fi

            echo "Activating virtual environment..."
            source ${{ secrets.REMOTE_APP_DIR }}/.venv/bin/activate

            # Ensure pip is up to date
            python3 -m pip install --upgrade pip

            # Create .env file with secrets from GitHub
            cat > .env << EOF
            BOT_TOKEN=${{ secrets.BOT_TOKEN }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_NAME=${{ secrets.DB_NAME }}
            EOF

            pip install -r requirements.txt
            alembic upgrade head

            # Deploy service file
            sudo cp deploy/office-automation.service /etc/systemd/system/
            sudo systemctl daemon-reload

            # Stop any existing service
            sudo systemctl stop office-automation || true

            # Start service
            sudo systemctl start office-automation
            sudo systemctl enable office-automation
            echo "=== DEPLOYMENT COMPLETED SUCCESSFULLY: $(date) ==="
